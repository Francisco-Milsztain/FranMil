casi todas las apps son listas de cosas
visualizar una lista en pantalla

como interactuar con listas en pantallas
cargar informacion de/en una lista
etc

las listas estan compuestas por items
los items pueden tener contenido

la lista de items sale de una class de objetos que tenga la lista

list<movie> pelis --> lista en cÃ³digo (movie es la class) (pelis es el nombre de la lista)
el objetivo es convertirla a una lista visual

cuando se convierte una lista en otra cosa se llama mapping
convertir una lista de un tipo a una lista de otro tipo = mapping

COMO FLUTTEREAR:
nueva app

movie_example
se hacen el router, screens, entities, instalar libs
panatlla movies_screen.dart 
stl class MoviesScren

router app_router.dart
final appRouter = goRouter(routes:[

  path: '/movies', builder(blabla), => MoviesScreen()

]
);

carpeta entiteis
arhivo movie.dart

class Movie {

String id;
String title;
String description;
String posterUrl;
String director;
int year;

//copnstructor
Movie({
required this.id, 
//etc etc
)}

ahora hay que crear la lista de peliculas
sigo en movie.dart

final List<Movie> movies = [
Movie(
id: '1',
//etc
),

]

vuevlo a moviesScreen

hago scaffold

hay que hacer el formato de lo que se quiere mostrar (por ejepmplo, title + id)

[EJEMPLO BOLUDO]
se usa 
body: ListView.builder(
itemCount: 40, //cantidad de items
itemBuilder: (context, index){ //constructor de cada item (sirve como un for para todos los items)
  return Text("Movie Item ${index}");
  }, 
)

variable abajo del override
abajo del widget build
final movieList = movies; (se importa la class)


body: ListView.builder(
itemCount: movieList.lenght, //cantidad de items EN LA LISTA
itemBuilder: (context, index){ //constructor de cada item (sirve como un for para todos los items)
  return Text(movieList[index].title,);
  }, 
)



body: ListView.builder(
itemCount: movieList.lenght, //cantidad de items EN LA LISTA
itemBuilder: (context, index){ //constructor de cada item (sirve como un for para todos los items)
  return const Row(children: 
[

Image.network(movielist[index].posterUrl, width: 100, height: 100, fit: BoxFit.cover) //en la class hay que poner una URL valida de una imaegn
Text(movieList[index].title,);

]
);
  }, 
)

//SIN USAR ROW
body: ListView.builder(
itemCount: movieList.lenght, //cantidad de items EN LA LISTA
itemBuilder: (context, index){ //constructor de cada item (sirve como un for para todos los items)
  return const 

ListTitle(

  title: Text("movieList[index].title),
  subtitle: Text("movieList[index].director"),
  leading: Image.network(movielist[index].posterUrl, width: 100, height: 100, fit: BoxFit.cover),

);
  }, 
)

tambien se puede hacer ctrl + . en lo que esta despues del return() y ahi se pone una Card( child: ListTitle



TAREA:
sobre la app del login, la pantalla home ahora tiene que tener una lista de ALGO QUE TE GUSTE, y tiene que tener una imagen titulo e info extra
