siguiendo con notas 4
como hago para hacer click en algun elemento de la lista, para que ahi pase algo

a la parte de listView, listTile
se usa onTap o onLongPress

abajo del ) que cierra lastile
se pone 

onTap: ()
{
  [PONGLO QUE QUIERO]

  por ejemplo
  context.push('/pantalla2', extra: blablabla)
}

-----------------------
EMPIEZAN NOTAS 5 REALES
-----------------------

stl = no tiene estados
stf = tiene estados

el estado es una foto del momento. las variables y elementos en un momento determinado.
si necesito que mi estado cambie uso setState(), y ahi saco otra foto

dentro de una pantalla stateful
se crea una variable int counter = 0

en el scaffold bla bla

conto child: text('counter: $counter')


fuera del body pongo un boton que sirve como un boton cualquiera pero afuera del body
floatingActionButton:
onPressesd() {} bla

---

cuando una variable se actualiza en pantalla1, luego voy a pantalla2, y vuelvo a pantalla1, la variable se reinició. no queremos eso. queremos guardar el estado de las variables
una pantalla tampoco puede acceder a variables de otra pantalla.

se usa un gestor de estados para superar estas complicaciones. son librerias. riverpod es la que vamos a usar.
inicialmente se deja de usar stf y se pasa a usar consumerwidget.
riverpod saca las variables que se guardan por pantalla, y dejan de depender de estas.

pub.dev
flutter_riverpod

terminal: $ flutter pub add flutter_riverpod
NO SE SI SE USA EL [ $ ] O NO

se basa en providers, proveedores de estaodos.


COMO CODERAR:

-------------------

en mian se agrega

runApp(const ProviderScope(child: MainApp( )));

-------------------

screens -> pantalla1 la hago ConsumerWidget
voy a hacer una variable dentro del build (normalmente van afuera)

@override
widget build(BuildContext context, ref)

final counter = ref.watch(counterProvider) (ref.watch actualiza siempre, si pongo ref.read solo se hace una vez) 

hago un elevatedButton
onPressed: ()
{
  ref.read(counterProvider.notifier).state ++;
},


-------------------

fuera de screens -> providers.dart
StateProvider <int> counterProvider = StateProvider <int>((ref) => 0); //el 0 se puede cambiar por el valor que quiera. counterProvider es el nombre del dato tipo StateProvider

-------------------

TAREA: una pantalla extra para agregar peliculas a la lista de datos (en mi caso juegos). desde esta nueva pantalla se deben meter todos los datos necesarios.

1. instalar flutter_riverpod
2. crear un provider para la lista de juegos
3. observar (watch) el provider desde la pantalla principal y desde la de agregar elementos a la lista
4. a través del .notifier modificar la lista
