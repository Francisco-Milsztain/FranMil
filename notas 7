frontend: una app que tiene interfaz de usuario. backend: una app que no tiene interfaz de usuario.
hay bases de datos (db) locales, guardadas adentro del dispositivo, ej: memoria del teléfono.
hay bases de datos que están en la nube, guardadas fuera del dispositivo.

la ventaja de la db local es que no necesita internet.
la ventaja de la base de datos de la nube, es que yo puedo consumir esta desde varios dispositivos, permitiendo que la información se comparta.
la nube es un servidor (una computadora).

para conectar un dispositivo (frontend) a la nube, se requiere un backend como intermediario (el backend ES la base de datos).
el backend maneja la db, la autenticacion, los archivos/datos, y a veces la business logic.

la business logic maneja la logica de negocio, permite que los usuarios hagan lo que el negocio quiere (esta logica puede estar en el frontend tamibien).

la api es la interfaz de programación entre las dos partes (conecta el frontend con el backend //// tambien puede concetar backend con backend).
EL BACKEND SIEMPRE ESTÁ, NO SIEMPRE LO HACES VOS.

DATABASES:

se clasifiacban en: relacionales y no relacionales (esta clasificacion es una mierda dice ale)
las relacionales permiten que se relacionen los objetos a traves de atributos.
la clasificacion está mal, porque las relaciones entre actores siempre existen, sin importar si hay base de datos o no.

LAS BASES DE DATOS REALMENTE SE DIVIDEN EN *SQL (structure query language)* Y EN *NO SQL*
las sql tienen relaciones fuertes o de dependencia entre actores. en las no sql no pasa esto.
en una base estructurada (sql) todos los usuarios(elementos) tienen la misma forma o atributos. en una tabla, todos tienen la misma estructura.
en una no estructurada (no sql), cada usuario puede tener atributos distintos, tiene forma de árbol con ramificaciones en vez de ser una tabla.

------------------------------------------------------------------------------------------------------------------------------------------------------------

